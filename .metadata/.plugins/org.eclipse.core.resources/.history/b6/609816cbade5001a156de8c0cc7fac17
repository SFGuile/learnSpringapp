package com.example.demo;


import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;

import java.io.StringWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.Marshaller;

import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.springframework.core.io.InputStreamResource;

import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;

import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.example.demo.model.DZSBB;
import com.example.demo.model.ExcelContents;
import com.example.demo.model.MXXX;
import com.example.demo.model.SB_FWSKKP;
import com.example.demo.model.SB_FWSKKP_BTXX;
import com.example.demo.model.SB_FWSKKP_FPXX;
import com.example.demo.model.SB_FWSKKP_MXXX;
import com.example.demo.model.SP;


@Controller
public class HomeController {
    
	@RequestMapping("home")
	public String home(){
		
		System.out.print("hi");
		return "home.jsp";
	}
	
	
	
	 
	@PostMapping("/uploadfile")
	 public  String uploadFile(@RequestParam("file") MultipartFile file,
	    		@RequestParam(name="address", required = false) String myaddress,
	    		@RequestParam(name="bankaccount", required = false) String mybankaccount,
	    		@RequestParam(name="kpr", required = false) String mykpr,
	    		@RequestParam(name="skr", required = false) String myskr,
	    		@RequestParam(name="fhr", required = false) String myfhr) {

		String TYPE = "application/vnd.ms-excel";
		
		if (TYPE.equals(file.getContentType())) {
	        try {
	    
	        	
	          List<ExcelContents> tempExcelcontentList = new ArrayList<ExcelContents>();
	           HSSFWorkbook workbook = new HSSFWorkbook(file.getInputStream());
	            
	      	   
	           String consequencemsg="";
	           int errsheetcount=0;
	           int recordscount=0;
	           int sheetscount=0;
	           int invoiceindex=1;
	           
	           for (int  j= 0; j < workbook.getNumberOfSheets(); j++) {
	            	 HSSFSheet worksheet = workbook.getSheetAt(j);
	            	 String sheetname=workbook.getSheetName(j);
	            	 short notoligable=0;
	      	    for(int i=0;i<worksheet.getPhysicalNumberOfRows() ;i++) {
	      	    	 HSSFRow row=worksheet.getRow(i);
	      	    	if (i==0)
	      	    	{
	      	    		
	      	    		String title=row.getCell(0).getStringCellValue();
	      	    		String comparestr="序号";
	      	    		if (!title.trim().equals(comparestr))
	      	    		{
	      	    		 
	      	    			consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(1).getStringCellValue();
	      	    		comparestr="发票代码";
	      	    		if (!title.trim().equals(comparestr))
	      	    		{
	      	    			consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(2).getStringCellValue();
	      	    		comparestr="发票号码";
	      	    		if (!title.trim().equals(comparestr))
	      	    		{
	      	    			consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(3).getStringCellValue();
	      	    		comparestr="销方识别号";
	      	    		if (!title.trim().equals(comparestr))
	      	    	 	{
	      	    			consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(4).getStringCellValue();
	      	    		comparestr="销方名称";
	      	    		if (!title.trim().equals(comparestr))
	      	    		{
	      	    			consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(5).getStringCellValue();
	      	    		comparestr="购方识别号";
	      	    		if (!title.trim().equals(comparestr))
	      	    		{
	      	    			consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(6).getStringCellValue();
	      	  		    comparestr="购方名称";
	      	  		    if (!title.trim().equals(comparestr))
	      	    		{
	  	    		  	    consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	  	    			    errsheetcount++;
	  	    			  notoligable=1;
	  	    			    break;
	      	    		}
	      	    		
	      	    		
	  	    		    title=row.getCell(7).getStringCellValue();
	  	    		    comparestr="购方地址电话";
	  	    		    if (!title.trim().equals(comparestr))
	      	    	 
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
		    		    
	      	    		title=row.getCell(8).getStringCellValue();
	      	    	    comparestr="购方银行账号";
	      	    	  if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(9).getStringCellValue();
	      	    	    comparestr="密文";
	      	    	  if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(10).getStringCellValue();
	      	    		comparestr="开票日期";
	      	    		if (!title.trim().equals(comparestr))
	      	      		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(11).getStringCellValue();
	      	    	    comparestr="金额";
	      	    	  if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(12).getStringCellValue();
	      	    	    comparestr="税额";
	      	    	  if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(13).getStringCellValue();
	      	    		comparestr="主要商品名称";
	      	    		if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(14).getStringCellValue();
	      	    		comparestr="备注";
	      	    		if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(15).getStringCellValue();
	      	    	    comparestr="是否作废";
	      	    	    if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(16).getStringCellValue();
	      	    		comparestr="发票类别";
	      	    		if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(17).getStringCellValue();
	      	    		comparestr="是否收购";
	      	    		if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(18).getStringCellValue();
	      	    	    comparestr="是否差额征收";
	      	    	  if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(19).getStringCellValue();
	      	    		comparestr="开票机号";
	      	    		if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
	      	    		title=row.getCell(20).getStringCellValue();
	      	    	    comparestr="商品名称";
	      	    	    if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
		    		    title=row.getCell(21).getStringCellValue();
	      	    	    comparestr="商品税收分类编码";
	      	    	    if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
		    		    
		    		    title=row.getCell(22).getStringCellValue();
	      	    	    comparestr="数量";
	      	    	    if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
		    		    title=row.getCell(23).getStringCellValue();
	      	    	    comparestr="金额";
	      	    	    if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
		    		    title=row.getCell(24).getStringCellValue();
	      	    	    comparestr="税额";
	      	    	    if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
	      	    		
		    		    title=row.getCell(25).getStringCellValue();
	      	    	    comparestr="税率";
	      	    	    if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
		    		    
		    		    title=row.getCell(26).getStringCellValue();
	      	    	    comparestr="规格型号";
	      	    	    if (!title.trim().equals(comparestr))
	      	    		{
		    		    	consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"第"+Integer.toString(i+1) +"个标题不是"+comparestr+"，与预定的Excel不同，程序退出 ";
	      	    			errsheetcount++;
	      	    			notoligable=1;
	      	    			 break;
	      	    		}
		    		    
	      	    	}
	      	    	else
	      	    	{
	      	    	   ExcelContents invoiceexcelcontent = new ExcelContents();
	      	    	   invoiceexcelcontent.setSn(row.getCell(0).getStringCellValue());
	      	    	   invoiceexcelcontent.setInvoicecode(row.getCell(1).getStringCellValue());
	      	    	   invoiceexcelcontent.setInvoicenum(row.getCell(2).getStringCellValue());
	      	    	   invoiceexcelcontent.setSellerid(row.getCell(3).getStringCellValue());
	      	    	   invoiceexcelcontent.setSellername(row.getCell(4).getStringCellValue());
	      	    	   invoiceexcelcontent.setBuyerid(row.getCell(5).getStringCellValue());
	      	    	   invoiceexcelcontent.setBuyername(row.getCell(6).getStringCellValue());
	      	    	   invoiceexcelcontent.setBuyeradd(row.getCell(7).getStringCellValue());
	      	    	   invoiceexcelcontent.setBuyerbankacc(row.getCell(8).getStringCellValue());
	      	    	   invoiceexcelcontent.setCryptocontents(row.getCell(9).getStringCellValue());
	      	    	   invoiceexcelcontent.setIssuedate(row.getCell(10).getStringCellValue());
	      	    	   invoiceexcelcontent.setTotal(row.getCell(11).getNumericCellValue());
	      	    	   invoiceexcelcontent.setTaxtotal(row.getCell(12).getNumericCellValue());
	      	    	   invoiceexcelcontent.setMainproductname(row.getCell(13).getStringCellValue());
	      	    	   invoiceexcelcontent.setMemo(row.getCell(14).getStringCellValue());
	      	    	   invoiceexcelcontent.setIfappeal(row.getCell(15).getStringCellValue());
	      	    	   invoiceexcelcontent.setInvoicetype(row.getCell(16).getStringCellValue());
	      	    	   invoiceexcelcontent.setIfaccquired(row.getCell(17).getStringCellValue());
	      	    	   invoiceexcelcontent.setIfdiffecent(row.getCell(18).getStringCellValue());
	      	    	   invoiceexcelcontent.setPoscode(row.getCell(19).getStringCellValue());
	      	    	   invoiceexcelcontent.setProductname(row.getCell(20).getStringCellValue());
	      	    	   invoiceexcelcontent.setTaxtypecode(row.getCell(21).getStringCellValue());
	      	    	   
	      	    	   if (isNumeric(row.getCell(22).getStringCellValue().trim()))
	      	    	   {
	      	    		 invoiceexcelcontent.setThenumber(Double.parseDouble(row.getCell(22).getStringCellValue().trim())); 
	      	    		
	      	    	   }
	      	    	   else
	      	    	   {
	      	    		 invoiceexcelcontent.setThenumber(-1000);
	      	    		 consequencemsg=consequencemsg+" 在excel第" +  Integer.toString(j) +"个表 第"+ Integer.toString(i) +"行额问题";
	      	    	   }
	      	    	   
	      	    	//   invoiceexcelcontent.setThenumber(row.getCell(22).getNumericCellValue());
	      	    	   invoiceexcelcontent.setAmount(row.getCell(23).getNumericCellValue());
	      	    	   invoiceexcelcontent.setTax(row.getCell(24).getNumericCellValue());
	      	    	   invoiceexcelcontent.setTaxrate(row.getCell(25).getNumericCellValue());
	      	    	   invoiceexcelcontent.setProdsize(row.getCell(26).getStringCellValue());	 
	      	    	   tempExcelcontentList.add(invoiceexcelcontent);
	      	    	   recordscount++;
	      	    	}
	      	     
	      	          
	      	     }
	      	    
	      	       if(notoligable==0)
	      	       {
	      	    	 consequencemsg=consequencemsg+"Excel 的sheet"+sheetname+"导入成功   ";
	      	    	 sheetscount++;
	      	       }
	      	    }
	            
	           
	           if (errsheetcount==workbook.getNumberOfSheets())
	           {
	        	   consequencemsg="些excel不是增值税发票Excel，不能导入任何数据";
	           }
	           else if(recordscount==0)
	           {
	        	   consequencemsg="些excel数据为空";
	           }
	           else
	           {
	        	   consequencemsg=consequencemsg+" 共导入"+Integer.toString(sheetscount)+"个表，"+Integer.toString(recordscount)+"个记录";
	           }
	           
	           workbook.close();
	           
	           String invoicenumbercurrent="";
	           String invoicenumberprevious="";
	           DZSBB dzbb=new DZSBB();
	           SB_FWSKKP fwskpp=new SB_FWSKKP();
	           dzbb.setSB_FWSKKP(fwskpp);
	           SB_FWSKKP_BTXX fwskkpbtxx=new SB_FWSKKP_BTXX();
	           SB_FWSKKP_FPXX fwskkpfpxx=new SB_FWSKKP_FPXX();
	           List<SB_FWSKKP_MXXX> mxxlist=new ArrayList<SB_FWSKKP_MXXX>();
	           List<SP> splist=new ArrayList<SP>();
	           fwskpp.setSB_FWSKKP_FPXX(fwskkpfpxx);
	           fwskkpfpxx.setSB_FWSKKP_MXXX(mxxlist);
	           
	           int elementindex=0;
	           for (ExcelContents xc:tempExcelcontentList) {
	        	   
	        	   if (elementindex==0)
	        	   {
	        		   fwskkpbtxx.setSB_FWSKKP_BTXX_NSRSBH(xc.getSellerid());
	        		   String issuedatestring=xc.getIssuedate();
	        		   if (issuedatestring.length()>=6)
	        		   fwskkpbtxx.setSB_FWSKKP_BTXX_KPYF(issuedatestring.substring(6));
	        		  
	        	   }
	        	   
	        	   
	        	       invoicenumbercurrent=xc.getInvoicenum();
	        	  
	        		  
	        		   
	        		   SB_FWSKKP_MXXX fwskkpmxxx=new SB_FWSKKP_MXXX();
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_XH(Integer.toString(invoiceindex));
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_FPDM(xc.getInvoicecode());
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_FPHM(xc.getInvoicenum());
	                           		   
	        		   MXXX mxxx=new MXXX();
	        		   mxxx.setSB_FWSKKP_MXXX_XFDZDH(myaddress);
	        		   mxxx.setSB_FWSKKP_MXXX_XFYHZH(mybankaccount);
	        		   fwskkpmxxx.setMXXX(mxxx);
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_XFMC(xc.getSellername());
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_XFSBH(xc.getSellerid());
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_GFMC(xc.getBuyername());
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_GFSBH(xc.getBuyerid());
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_KPJH(xc.getPoscode());
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_GFDZDH(xc.getBuyeradd());
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_GFYHZH(xc.getBuyerbankacc());
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_MW(xc.getCryptocontents());
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_KPRQ(xc.getIssuedate());
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_JE(xc.getTotal());
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_SL(xc.getTaxrate());
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_SE(xc.getTaxtotal());
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_ZYSPMC(xc.getMainproductname());
	        		   String invoicetype=xc.getInvoicetype();
	        		   if (invoicetype.trim().equals("增值税普通发票"))
	        		   {
	        				   fwskkpmxxx.setSB_FWSKKP_MXXX_SPSM("4001");
	        				   fwskkpmxxx.setSB_FWSKKP_MXXX_FPZL(2);
	        		   }
	        		   else
	        		   {
	        			   fwskkpmxxx.setSB_FWSKKP_MXXX_FPZL(1);
	        		   }
	        		   
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_BZ(xc.getMemo());
	        		   
	        		   
	        		   String ifdifference=xc.getIfdiffecent();
	        		   if (ifdifference.trim().equals("非差额发票"))
	        			   fwskkpmxxx.setSB_FWSKKP_MXXX_CEZS(0);
	        		   else
	        			   fwskkpmxxx.setSB_FWSKKP_MXXX_CEZS(1);
	        		   
	        		   String ifappealstr=xc.getIfappeal();
	        		   
	        		   if(ifappealstr.trim().equals("未作废"))
	        		     fwskkpmxxx.setSB_FWSKKP_MXXX_ZFBZ(0);
	        		   else
	        			   fwskkpmxxx.setSB_FWSKKP_MXXX_ZFBZ(1);
	        		   
	        		   String ifaccquired=xc.getIfaccquired();
	        		   if(ifaccquired.trim().equals("非收购发票"))
	        			   fwskkpmxxx.setSB_FWSKKP_MXXX_SGBZ(0);
	        		   else
	        			   fwskkpmxxx.setSB_FWSKKP_MXXX_SGBZ(1);
	        		   
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_JSHJ(xc.getTotal()+xc.getTaxtotal());
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_KPR(mykpr);
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_SKR(myskr); 
	        		   fwskkpmxxx.setSB_FWSKKP_MXXX_FHR(myfhr);
	        		   
	        	
	        		   if (!invoicenumbercurrent.equals(invoicenumberprevious))
	            	   {
	        			  
	        			   mxxlist.add(fwskkpmxxx);
	        			   splist.clear();
	            	   }
	        		  
	        	   
	        	   SP sp=new SP();
	        	   sp.setJE(xc.getAmount());
	        	   sp.setSL(xc.getTaxrate());
	        	   sp.setSE(xc.getTax());
	        	   sp.setSPMC(xc.getProductname());
	        	   sp.setGGXH(xc.getProdsize());
	        	   sp.setJLDW("盒");
	        	   sp.setSHUL(xc.getThenumber());
	        	   sp.setDJ((xc.getAmount()+xc.getTax())/xc.getThenumber());
	        	   sp.setFLBM(xc.getInvoicecode());
	        	   sp.setHSBZ("True");
	        	   splist.add(sp);
	        	  
	        	   
	        	   
	        	   invoiceindex++;
	        	   
	        	   List<SP> mysplist=new ArrayList<SP>();
				   mysplist.addAll(splist);
				   fwskkpmxxx.setSPXX(mysplist);
				   
	    		  
	        	   
	        	   elementindex++;
	        	   invoicenumberprevious=invoicenumbercurrent;
	           }
	           
	           UUID uuid = UUID.randomUUID();
	           
	           File xmlfilename = new File(uuid.toString()+".xml");
	       
	           JAXBContext jaxbContext = JAXBContext.newInstance(DZSBB.class);
	           Marshaller jaxbMarshaller = jaxbContext.createMarshaller();

	           // output pretty printed
	           jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);

	           jaxbMarshaller.marshal(dzbb, xmlfilename);
	           jaxbMarshaller.marshal(dzbb, System.out);
	           
	           ModelAndView model = new ModelAndView("result");
	           model.addObject("excecontentslist",tempExcelcontentList);
	           model.addObject("message",consequencemsg);
	           model.addObject("downloadfile",xmlfilename);
	           return "result.jsp";
	        	
	        } catch (Exception e) {
	            e.printStackTrace();
	            throw new FileStorageException("读取Excel时出错， " + file.getOriginalFilename()
	                + ". 请重试!");
	        }
		}
		else
		{
			  ModelAndView model = new ModelAndView("exception");
	         
	           model.addObject("message","此文件不是Excel");
	           
	           return "exception.jsp";
		}
	    }
	
	
	@RequestMapping(path = "/download", method = RequestMethod.POST)
	public void saveTxtFile(HttpServletResponse response,String filename) throws IOException {

	    String yourXmlFileInAString;
	    response.setContentType("application/xml");
	    response.setHeader("Content-Disposition", "attachment;filename="+filename);

	    BufferedReader br = new BufferedReader(new FileReader(filename));
	    String line;
	    StringBuilder sb = new StringBuilder();

	    while((line=br.readLine())!= null){
	        sb.append(line);
	    }

	    yourXmlFileInAString  = sb.toString();

	    ServletOutputStream outStream = response.getOutputStream();
	    outStream.println(yourXmlFileInAString);
	    outStream.flush();
	    outStream.close();
	}
	
	public static boolean isNumeric(String strNum) {
	    if (strNum == null) {
	        return false;
	    }
	    try {
	        double d = Double.parseDouble(strNum);
	    } catch (NumberFormatException nfe) {
	        return false;
	    }
	    return true;
	}
}
